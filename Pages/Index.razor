@page "/"
@using System.Threading

<div>
    <div style="display: table; margin: 0 auto; text-align: center">
        <h1>Conways Game of Life</h1>

        <div id="gridWrapper" style="grid-template-rows: repeat(@Size, 1em); grid-template-columns: repeat(@Size, 1em);">
            @for (var i = 1; i <= Size; i++)
            {
                for (var j = 1; j <= Size; j++)
                {
                    if (_gameBoard.Cells[i-1, j-1])
                    {
                        <div style="grid-column: @i; grid-row: @j; background-color: black"></div>
                    }
                    else
                    {
                        <div style="grid-column: @i; grid-row: @j; background-color: white"></div>
                    }

                }
            }
        </div>
        <div style="display: flex; justify-content: space-evenly">
            <button class="btn btn-primary" style="width: 30%;" @onclick="Start">Start</button>
            <button class="btn btn-primary" style="width: 30%;" @onclick="Stop">Stop</button>
        </div>
    </div>
        
</div>



@code {

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _gameBoard = GameBoard.Create(Size, new bool[Size,Size]);
    }

    private const int Size = 60;
    private bool started = false;
    private GameBoard _gameBoard;

    private void Start()
    {
        if (started == false)
        {
            var startingCells = new bool[Size,Size];
            startingCells[20, 2] = true;
            startingCells[20, 3] = true;
            startingCells[20, 4] = true;
            startingCells[20, 5] = true;
            startingCells[20, 6] = true;
            startingCells[20, 7] = true;
            startingCells[20, 8] = true;
            startingCells[20, 9] = true;

            startingCells[20, 10] = true;
            startingCells[20, 11] = true;
            startingCells[20, 12] = true;
            startingCells[20, 13] = true;

            startingCells[20, 17] = true;
            startingCells[20, 18] = true;
            startingCells[20, 19] = true;

            startingCells[20, 26] = true;
            startingCells[20, 27] = true;
            startingCells[20, 28] = true;
            startingCells[20, 29] = true;
            startingCells[20, 30] = true;
            startingCells[20, 31] = true;
            startingCells[20, 32] = true;

            startingCells[20, 34] = true;
            startingCells[20, 35] = true;
            startingCells[20, 36] = true;
            startingCells[20, 37] = true;
            startingCells[20, 38] = true;




            _gameBoard = GameBoard.Create(Size, startingCells);
            started = true;
        }

        _gameBoard.Update();
    }

    private void Stop()
    {
        _gameBoard = GameBoard.Create(Size, new bool[Size,Size]);
    }

}